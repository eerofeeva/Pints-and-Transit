[postgresql]
host = localhost
database = pints_and_transit
user = postgres
password = admin1
port = 5432

[create_tables]
bikes = DROP TABLE IF EXISTS bikes;
    CREATE TABLE bikes (
    ride_id VARCHAR,
    rideable_type VARCHAR,
    started_at TIMESTAMP,
    ended_at TIMESTAMP,
    start_station_name VARCHAR,
    start_station_id NUMERIC,
    end_station_name VARCHAR,
    end_station_id NUMERIC,
    start_lat NUMERIC,
    start_lng NUMERIC,
    end_lat NUMERIC,
    end_lng NUMERIC, 
    member_casual VARCHAR,
    PRIMARY KEY (ride_id)
    );

ofsale = DROP TABLE IF EXISTS ofsale;
    CREATE TABLE ofsale
    (
    X NUMERIC,
    Y NUMERIC,    
    OBJECTID INTEGER, --1
    ADDRESS VARCHAR,  --"2200 COMO AVE SE"
    APN VARCHAR, --"1902923240200"
    ENDORSEMENTS VARCHAR, --endorsements: " Liquor, On Sale, No Entertainment"
    expirationYear INTEGER, --expirationYear: 2021
    expirationDate VARCHAR, --expirationDate: 1633132799000
    issueDate VARCHAR, --1604911523000
    LAT NUMERIC, --lat: 44.98765
    licenseName VARCHAR, --licenseName: "Manning's Restaurant and Bar"
    licenseNumber VARCHAR, --licenseNumber: "LIC390992"
    licenseStatus VARCHAR, --licenseStatus: "Approved"
    licenseType VARCHAR, --licenseType: "BLLiquor"
    liquorType VARCHAR, --liquorType: "On Sale"
    LONG NUMERIC, --long: -93.22115
    neighborhood VARCHAR, --neighborhood: "Como"
    WARD VARCHAR, --ward: "2"
    xWebMercator NUMERIC, --xWebMercator: -10377330.5201
    yWebMercator NUMERIC, --yWebMercator: 5619576.9288
    lastUpdateDate VARCHAR
    )

onsale = DROP TABLE IF EXISTS onsale;
    CREATE TABLE onsale
    (
    X NUMERIC,
    Y NUMERIC,    
    OBJECTID INTEGER, --1
    ADDRESS VARCHAR,  --"2200 COMO AVE SE"
    APN VARCHAR, --"1902923240200"
    ENDORSEMENTS VARCHAR, --endorsements: " Liquor, On Sale, No Entertainment"
    expirationYear INTEGER, --expirationYear: 2021
    expirationDate VARCHAR, --expirationDate: 1633132799000
    issueDate VARCHAR, --1604911523000
    LAT NUMERIC, --lat: 44.98765
    licenseName VARCHAR, --licenseName: "Manning's Restaurant and Bar"
    licenseNumber VARCHAR, --licenseNumber: "LIC390992"
    licenseStatus VARCHAR, --licenseStatus: "Approved"
    licenseType VARCHAR, --licenseType: "BLLiquor"
    liquorType VARCHAR, --liquorType: "On Sale"
    LONG NUMERIC, --long: -93.22115
    neighborhood VARCHAR, --neighborhood: "Como"
    WARD VARCHAR, --ward: "2"
    xWebMercator NUMERIC, --xWebMercator: -10377330.5201
    yWebMercator NUMERIC, --yWebMercator: 5619576.9288
    lastUpdateDate VARCHAR
    )

[insert_data]
bikes = COPY bikes(ride_id, rideable_type, started_at, ended_at, 
        start_station_name, start_station_id, end_station_name, end_station_id, 
        start_lat, start_lng, end_lat, end_lng, member_casual)
    FROM '{}\resources\all_data_2020.csv'
    DELIMITER ','
    CSV HEADER;

onsale = COPY onsale(X,Y,apn,OBJECTID,licenseNumber,licenseType,licenseStatus,
    liquorType,issueDate,expirationYear,expirationDate,licenseName,address,endorsements,ward,
    neighborhood,lat,long,xWebMercator,yWebMercator,lastUpdateDate)
    FROM '{}\resources\onsale.csv'
    DELIMITER ','
    CSV HEADER;

ofsale = COPY ofsale(X,Y,apn,OBJECTID,licenseNumber,licenseType,licenseStatus,
    liquorType,issueDate,expirationYear,expirationDate,licenseName,address,endorsements,ward,
    neighborhood,lat,long,xWebMercator,yWebMercator,lastUpdateDate)
    FROM '{}\resources\ofsale.csv'
    DELIMITER ','
    CSV HEADER;    

[calculate_distances]
heatmap = DROP TABLE IF EXISTS temp_rides;
    DROP TABLE IF EXISTS temp_distance;
    select *  INTO temp_rides from ( select end_station_id, end_station_name, 
    count(ride_id) as rides, avg(end_lat) as end_lat, avg(end_lng) as end_lng from bikes
    group by end_station_id, end_station_name
    order by rides desc
	) as agg;
    create extension if not exists cube;
    create extension if not exists earthdistance;
    select end_station_id, end_station_name, end_lat, end_lng, count(distance) as nearby, sum(rides) as total_rides
	into temp_distance from (
    select b.end_station_id, b.end_station_name, b.end_lng, b.end_lat, rides,
        (  point(b.end_lng, b.end_lat)<@>point(o.long, o.lat)
        ) as distance
        from temp_rides b, onsale o
        order by distance asc
    ) as temp_distance
    where distance<.5
    group by end_station_id, end_station_name, end_lat, end_lng
    order by nearby desc;

[get_heatmap]
get_heatmap = Select * from temp_distance;